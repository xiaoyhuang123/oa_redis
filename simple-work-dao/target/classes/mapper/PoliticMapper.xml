<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ft.backend.work.dao.PoliticMapper" >
  <resultMap id="BaseResultMap" type="com.ft.backend.work.model.Politic" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="politicname" property="politicname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, politicname
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from politic
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from politic
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ft.backend.work.model.Politic" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into politic (id, politicname)
    values (#{id,jdbcType=BIGINT}, #{politicname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ft.backend.work.model.Politic" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into politic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="politicname != null" >
        politicname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="politicname != null" >
        #{politicname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ft.backend.work.model.Politic" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update politic
    <set >
      <if test="politicname != null" >
        politicname = #{politicname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ft.backend.work.model.Politic" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update politic
    set politicname = #{politicname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByCondition" parameterType="map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from politic
    <include refid="QUERY_WHERE_PART_CLAUSE"/>
  </select>

  <!-- 查询总条数 -->
  <select id="countByCondition" parameterType="map" resultType="java.lang.Integer">
    SELECT COUNT(*)
    from politic
    <include refid="QUERY_WHERE_PART_CLAUSE"/>
  </select>

  <!-- 分页 -->
  <sql id="QUERY_LIMIT_CONDITION">
    <if test="pageIndex != null and pageIndex &gt; 0 and pageSize != null and pageSize &gt; 0">LIMIT #{offset}, #{pageSize}</if>
  </sql>
  <!-- 查询条件 -->
  <sql id="QUERY_WHERE_PART_CLAUSE">
    <trim prefix="where" prefixOverrides="and | or">
      <if test="id != null" >
        AND id = #{id,jdbcType=BIGINT}
      </if>
      <if test="politicname != null" >
        AND politicname = #{politicname,jdbcType=VARCHAR}
      </if>

    </trim>
  </sql>
</mapper>